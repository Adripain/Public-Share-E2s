@name [A] Is that a rolls royce ?
@inputs [Base]:entity [Wheel1 Wheel2 Wheel3 Wheel4]:entity [Hydrolic1 Hydrolic2 Hydrolic3 Hydrolic4]:wirelink
@persist Constant Damping Length Divider Add_Length_Front Add_Length_Back
@persist Anti_Speed_Bumb_Max Anti_Speed_Bumb_Increase Anti_Speed_Bumb_Decrease Version
@persist Data:table

#[
Adrien's suspensions
Made on 2021-03-14
========================

How to use ?
You have 4 wheels counted in this order :

       Front
 1->  0----0  <-2
      |    |    
      |    |    
      |    |    
 4->  0----0  <-3
       Back

Make sure holos are over the good wheel : (rip if u are colorblinded lol)
 1 : Red
 2 : Green
 3 : Blue
 4 : Puple 

Fix all values bellow (Constant, Damping, Length, Add_Length_Front, Add_Length_Back)

Anti speed bumb system remove a part of the constant so please be sure Anti_Speed_Bumb_Max < Constant & Anti_Speed_Bumb_Decrease <= Anti_Speed_Bumb_Increase

Only refresh the chip when the base plate is on the same angle or change the direction: 

        Front
      0----0  
      |    |    
      |    |    (NORTH)
      |    |    
      0----0  
       Back

========================
If you have a problem please contact me on discord Adrien#3880
Enjoy with ur Rolls Royce' :D
]#

interval(5) #Faster will make the anti speed bumb faster but its not a good idea depending what kind of road

if(first() | dupefinished()){
    Constant         = 10000     #Force
    Damping          = 1200     #Easticity
    Length           = 95      #Distance
    Divider          = 2        #Lower is faster
    Add_Length_Front = 3        #Add lenght on the front wheels if the motor is heavy
    Add_Length_Back  = 0        #Add lenght on the back wheels if the motor is heavy
    
    Anti_Speed_Bumb_Max      = 5000 #Maximum of constant removing
    Anti_Speed_Bumb_Increase = 1000 #Increase remove constant value
    Anti_Speed_Bumb_Decrease = 500  #Decrease remove constant value
    
    
    local Direction = 4 #1 = front; 2 = right; 3 = left ; 4 = back
    local Alpha = 0   #Alpha of holograms
    
    Version = 1.5 #Please do not touch if u are not the owner
    local E = entity()
    E:setName(E:getName() + " v" +  Version:toString())
    
    Data["Lenght1",number] = Length
    Data["Lenght2",number] = Length
    
    Hydrolic1["Damping",number] = Damping
    Hydrolic2["Damping",number] = Damping
    Hydrolic3["Damping",number] = Damping
    Hydrolic4["Damping",number] = Damping
    
    Data["Constant1",number] = Constant
    Data["Constant2",number] = Constant
    Data["Constant3",number] = Constant
    Data["Constant4",number] = Constant
    
    for(I=1,4){
        Data["SaveDis_" + I,array] = array()
        for(F=1,3){
            Data["SaveDis_" + I,array][F,number] = 0
        }
    }
    
    if(Direction == 1){
        local Index = 1
        holoCreate(Index, Base:toWorld(vec( (Base:pos():x() - Wheel1:pos():x()), (Base:pos():y() - Wheel1:pos():y()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,0)) #Red
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Base:pos():x() - Wheel2:pos():x()), (Base:pos():y() - Wheel2:pos():y()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,255,0)) #Green
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Base:pos():x() - Wheel3:pos():x()), (Base:pos():y() - Wheel3:pos():y()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,0,255)) #Blue
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Base:pos():x() - Wheel4:pos():x()), (Base:pos():y() - Wheel4:pos():y())  , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,255)) #Purple
    }
    
    if(Direction == 2){
        local Index = 1
        holoCreate(Index, Base:toWorld(vec( (Wheel1:pos():y() - Base:pos():y()) , (Base:pos():x() - Wheel1:pos():x()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,0)) #Red
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Wheel2:pos():y() - Base:pos():y()) , (Base:pos():x() - Wheel2:pos():x()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,255,0)) #Green
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Wheel3:pos():y() - Base:pos():y()) , (Base:pos():x() - Wheel3:pos():x()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,0,255)) #Blue
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Wheel4:pos():y() - Base:pos():y()) , (Base:pos():x() - Wheel4:pos():x()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,255)) #Purple
    }
    
    if(Direction == 3){
        local Index = 1
        holoCreate(Index, Base:toWorld(vec( (Base:pos():y() - Wheel1:pos():y())  , (Base:pos():x() - Wheel1:pos():x()), Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,0)) #Red
        
        Index++
        holoCreate(Index, Base:toWorld(vec(  (Base:pos():y() - Wheel2:pos():y())  , (Base:pos():x() - Wheel2:pos():x()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,255,0)) #Green
        
        Index++
        holoCreate(Index, Base:toWorld(vec(  (Base:pos():y() - Wheel3:pos():y())  , (Base:pos():x() - Wheel3:pos():x()), Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,0,255)) #Blue
        
        Index++
        holoCreate(Index, Base:toWorld(vec(  (Base:pos():y() - Wheel4:pos():y())  , (Base:pos():x() - Wheel4:pos():x()) , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,255)) #Purple
    }
    
        
    if(Direction == 4){
        local Index = 1
        holoCreate(Index, Base:toWorld(vec(  (Wheel1:pos():x() - Base:pos():x() ), (Wheel1:pos():y() - Base:pos():y())  , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,0)) #Red
        
        Index++
        holoCreate(Index, Base:toWorld(vec(  (Wheel2:pos():x() - Base:pos():x() ), (Wheel2:pos():y() - Base:pos():y())  , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,255,0)) #Green
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Wheel3:pos():x() - Base:pos():x() ), (Wheel3:pos():y() - Base:pos():y())  , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(0,0,255)) #Blue
        
        Index++
        holoCreate(Index, Base:toWorld(vec( (Wheel4:pos():x() - Base:pos():x() ), (Wheel4:pos():y() - Base:pos():y())  , Length)))
        holoParent(Index, Base)
        holoAlpha(Index, Alpha)
        holoColor(Index, vec(255,0,255)) #Purple
    }
    
    
    function build(Index:number,Model:string, Pos:vector, Ang:angle, Parent:entity){
        holoCreate(Index,Pos)
        holoModel(Index, Model)
        holoAng(Index, Ang)
        holoParent(Index, Parent)
    }
    

    build(200, "models/bull/dynamicbuttonmedium.mdl", entity():toWorld(vec(0)), entity():toWorld(ang(0)), entity())
    holoScale(200, vec(1.5))
    build(300, "models/props_skybox/sunnoon.mdl", entity():toWorld(vec(0,0,2.3)), entity():toWorld(ang(-90,0,0)), entity())
    holoScale(300, vec(0.11))
    holoColor(300, vec(50,240,150))
    build(400, "", entity():toWorld(vec()), entity():toWorld(ang(0,0,0)), entity())
    holoAlpha(400, 0)
    
    
    runOnHTTP(1)
    httpRequest("https://blackmedusa.fr/" + "e2s/suspension_tester.html")
    
}


function release(Httpdata:string){
    local Http_array = Httpdata:explode(",")
    local V = Http_array[1,string]
    local S = Http_array[2,string]
    
    if(V == Version:toString()){
        print("Adrien's suspensions are up to date!")
    }
    else{
        if(owner():steamID()!=S){
            print("A newer version of suspensions is avaliable, you can contact Adrien#3880")
        }
    }
}

for(I=1,4){
    Data["SaveDis_" + I,array]:shift()
}

function number up_comp(Wheel:number){
    local A = 1
    local B = 3
    if(Data["SaveDis_" + Wheel,array][3,number]-1  > Data["SaveDis_" + Wheel,array][2,number]  & Data["SaveDis_" + Wheel,array][2,number]-1  > Data["SaveDis_" + Wheel,array][1,number]){
        return 1
    }
    return 0
    
}

if(httpClk()){
    local Httpdata = httpData()
    release(Httpdata)
}

if(Wheel1:isValid()){
    local L1 = holoEntity(1):pos():z() - Wheel1:pos():z()
    Data["SaveDis_" + 1,array][3,number] = Wheel1:pos():z()
    
    Data["Lenght1",number] = (Length + Add_Length_Front) + clamp(holoEntity(2):pos():z() - holoEntity(1):pos():z(),-10,10) + clamp((holoEntity(4):pos():z() - holoEntity(1):pos():z()),-10,10)
    Hydrolic1["Length",number] = Data["Lenght1",number]
    
    if(up_comp(1) == 1 & up_comp(3) == 0){
        if(Data["Constant1",number] > Constant-Anti_Speed_Bumb_Max){
            Data["Constant1",number] = Data["Constant1",number] - Anti_Speed_Bumb_Decrease
        }
    }
    else{
        if(Data["Constant1",number] < Constant){
            Data["Constant1",number] = Data["Constant1",number] + Anti_Speed_Bumb_Increase
        }
    }
    Hydrolic1["Constant",number] = Data["Constant1",number]
}

if(Wheel2:isValid()){
    local L2 = holoEntity(2):pos():z() - Wheel2:pos():z()
    Data["SaveDis_" + 2,array][3,number] = Wheel2:pos():z()
    
    Data["Lenght2",number] = (Length + Add_Length_Front) + clamp(holoEntity(1):pos():z() - holoEntity(2):pos():z(),-10,10) + clamp((holoEntity(3):pos():z() - holoEntity(2):pos():z()),-10,10)
    Hydrolic2["Length",number] = Data["Lenght2",number]
    
    if(up_comp(2) == 1 & up_comp(4) == 0){
        if(Data["Constant2",number] > Constant-Anti_Speed_Bumb_Max){
            Data["Constant2",number] = Data["Constant2",number] - Anti_Speed_Bumb_Decrease
        }
    }
    else{
        if(Data["Constant2",number] < Constant){
            Data["Constant2",number] = Data["Constant2",number] + Anti_Speed_Bumb_Increase
        }
    }
    Hydrolic2["Constant",number] = Data["Constant2",number]
}

if(Wheel3:isValid()){
    local L3 = holoEntity(3):pos():z() - Wheel3:pos():z()
    Data["SaveDis_" + 3,array][3,number] = Wheel3:pos():z()
    
    Data["Lenght3",number] = (Length + Add_Length_Back) + clamp(holoEntity(4):pos():z() - holoEntity(3):pos():z(),-10,10) + clamp((holoEntity(2):pos():z() - holoEntity(3):pos():z()),-10,10)
    Hydrolic3["Length",number] = Data["Lenght3",number]
    
    if(up_comp(3) == 1  & up_comp(1) == 0){
        if(Data["Constant3",number] > Constant-Anti_Speed_Bumb_Max){
            Data["Constant3",number] = Data["Constant3",number] - Anti_Speed_Bumb_Decrease
        }
    }
    else{
        if(Data["Constant3",number] < Constant){
            Data["Constant3",number] = Data["Constant3",number] + Anti_Speed_Bumb_Increase
        }
    }
    Hydrolic3["Constant",number] = Data["Constant3",number]
}


if(Wheel4:isValid()){
    local L4 = holoEntity(4):pos():z() - Wheel4:pos():z()
    Data["SaveDis_" + 4,array][3,number] = Wheel4:pos():z()
    
    Data["Lenght4",number] = (Length + Add_Length_Back) + clamp(holoEntity(3):pos():z() - holoEntity(4):pos():z(),-10,10) + clamp((holoEntity(1):pos():z() - holoEntity(4):pos():z()),-10,10)
    Hydrolic4["Length",number] = Data["Lenght4",number]
    
    if(up_comp(4) == 1  & up_comp(2) == 0){
        if(Data["Constant4",number] > Constant-Anti_Speed_Bumb_Max){
            Data["Constant4",number] = Data["Constant4",number] - Anti_Speed_Bumb_Decrease
        }
    }
    else{
        if(Data["Constant4",number] < Constant){
            Data["Constant4",number] = Data["Constant4",number] + Anti_Speed_Bumb_Increase
        }
    }
    Hydrolic4["Constant",number] = Data["Constant4",number]
}
